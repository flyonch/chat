{"ast":null,"code":"var _jsxFileName = \"/Users/flyonch/Desktop/JSReact/client/src/WebSock.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WebSock = () => {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  const [value, setValue] = useState('');\n  const socket = useRef();\n  const [connected, setConnected] = useState(false);\n  const [username, setUsername] = useState('');\n\n  function connect() {\n    socket.current = new WebSocket('ws://localhost:4000');\n\n    socket.current.onopen = () => {\n      setConnected(true);\n      const message = {\n        event: 'connection',\n        username,\n        message: 'connection',\n        id: Date.now()\n      };\n      console.log(\"Connected user\");\n      socket.current.send(JSON.stringify(message));\n    };\n\n    socket.current.onmessage = event => {\n      console.log(event);\n      const message = JSON.parse(event.data);\n      setMessages(prev => [message, ...prev]);\n    };\n\n    socket.current.onclose = () => {\n      console.log('socket close');\n    };\n\n    socket.current.onerror = () => {\n      console.log('socket error');\n    };\n  }\n\n  const disconnect = async () => {\n    setConnected(false);\n    /*     const message = {\n             event: 'disconnection',\n             message: 'disconnection',\n             username,\n             id: Date.now()\n         }\n         socket.current.send(JSON.stringify(message));*/\n\n    socket.current = WebSocket.CLOSED;\n  };\n\n  const sendMessage = async () => {\n    const message = {\n      username,\n      message: value,\n      id: Date.now(),\n      event: 'message'\n    };\n    socket.current.send(JSON.stringify(message));\n    setValue('');\n  };\n\n  if (!connected) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          type: \"text\",\n          placeholder: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: connect,\n          children: \"Enter name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: value,\n          onChange: e => setValue(e.target.value),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: disconnect,\n          children: \"disconnect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messages.map(mess => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            children: [mess.username, \". \", mess.message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this)\n        }, mess.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WebSock, \"3cT4WsfcDEqSZabjdtTXiO9x12k=\");\n\n_c = WebSock;\nexport default WebSock;\n\nvar _c;\n\n$RefreshReg$(_c, \"WebSock\");","map":{"version":3,"names":["React","useState","useRef","WebSock","messages","setMessages","value","setValue","socket","connected","setConnected","username","setUsername","connect","current","WebSocket","onopen","message","event","id","Date","now","console","log","send","JSON","stringify","onmessage","parse","data","prev","onclose","onerror","disconnect","CLOSED","sendMessage","e","target","map","mess"],"sources":["/Users/flyonch/Desktop/JSReact/client/src/WebSock.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react'\n\n\n\n\nconst WebSock = () => {\n    const [messages, setMessages] = useState([]);\n    const [value, setValue] = useState('');\n    const socket = useRef();\n    const [connected, setConnected] = useState(false);\n    const [username, setUsername] = useState('');\n\n    function connect() {\n        socket.current = new WebSocket('ws://localhost:4000')\n\n        socket.current.onopen = () => {\n            setConnected(true)\n            const message = {\n                event: 'connection',\n                username,\n                message: 'connection',\n                id: Date.now()\n            }\n            console.log(\"Connected user\")\n            socket.current.send(JSON.stringify(message))\n        }\n\n        socket.current.onmessage = (event) => {\n            console.log(event)\n            const message = JSON.parse(event.data)\n            setMessages(prev => [message, ...prev])\n        }\n\n        socket.current.onclose = () => {\n            console.log('socket close')\n        }\n        socket.current.onerror = () => {\n            console.log('socket error')\n\n        }\n    }\n\n\n    const disconnect = async () => {\n        setConnected(false)\n   /*     const message = {\n            event: 'disconnection',\n            message: 'disconnection',\n            username,\n            id: Date.now()\n        }\n        socket.current.send(JSON.stringify(message));*/\n        socket.current = WebSocket.CLOSED\n    }\n\n    const sendMessage = async () => {\n        const message = {\n            username,\n            message: value,\n            id: Date.now(),\n            event: 'message'\n        }\n        socket.current.send(JSON.stringify(message));\n        setValue('')\n    }\n\n\n\n\n\n    if (!connected) {\n        return (\n            <div className=\"center\">\n                <div className=\"form\">\n                    <input\n                        value={username}\n                        onChange={e => setUsername(e.target.value)}\n                        type=\"text\"\n                        placeholder=\"Name\"\n                    />\n                    <button onClick={connect}>Enter name</button>\n\n                </div>\n            </div>\n        )\n    }\n\n\n\n    return (\n        <div className=\"center\">\n            <div>\n                <div className=\"form\">\n                    <input value={value} onChange={e => setValue(e.target.value)} type=\"text\" />\n                    <button onClick={sendMessage}>send</button>\n                    <button onClick={disconnect}>disconnect</button>\n\n                </div>\n                <div className=\"messages\">\n                    {messages.map(mess =>\n                        <div key={mess.id}>\n                            <div className=\"message\">{mess.username}. {mess.message}</div>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default WebSock\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}